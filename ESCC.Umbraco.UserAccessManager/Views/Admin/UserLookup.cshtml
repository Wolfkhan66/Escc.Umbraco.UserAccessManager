@using System.Web.Mvc.Html
@model FindUserModel
@using ESCC.Umbraco.UserAccessManager.Models
@using ESCC.Umbraco.UserAccessManager.Utility;
@{
    ViewBag.Title = "User Details";
}

<h2>User Details</h2>
<p class="highlight">@ErrorMessageModel.ErrorMsg(TempData["MsgKey"])</p>

@if (Model.SearchResult.Any())
{
    foreach (var user in Model.SearchResult)
    {
        <p><strong>Full name:</strong> @user.FullName</p>
        <p><strong>Logon ID:</strong> @user.UserName</p>
        <p><strong>Email Address:</strong> @user.EmailAddress</p>

        if (!user.IsWebAuthor)
        {
            <p class="highlight">This user is not a Web Author</p>
            continue;
        }

        <div class="btn-group-x">
            @if (User.IsInRole(SystemRole.WebServices))
            {
                @Html.ActionLink("User Permissions", "Index", "Permissions", new {id = @user.UserId}, new {@class = "btn btn-primary", @role = "button"})
            }

            @Html.ActionLink("Reset Password", "InitiatePasswordReset", new {@user.UserId, @user.EmailAddress}, new {@class = "btn btn-warning", @role = "button"})

            @(@user.UserLocked ? Html.ActionLink("Unlock Account", "DisableUser", new {@user.UserId, @user.EmailAddress, @user.UserLocked }, new { @class = "btn btn-danger active", @role = "button" }) : Html.ActionLink("Lock Account", "DisableUser", new {@user.UserId, @user.EmailAddress, @user.UserLocked }, new { @class = "btn btn-danger", @role = "button" }))
        </div>
    }
}
else
{
    if (Model.IsEmailRequest)
    {
        <p>No user has been found with the email address <strong>@Model.EmailAddress</strong></p>
    }
    else
    {
        <p>No user has been found with the username <strong>@Model.UserName</strong></p>
    }

    if (User.IsInRole(SystemRole.WebServices))
    {
        @Html.ActionLink("Create new user", "InitiateUserCreation", null, new { @class = "btn btn-primary", @role = "button" })
    }
}

@*<div>
    Page @(Model.SearchResult.PageCount < Model.SearchResult.PageNumber ? 0 : Model.SearchResult.PageNumber) of @Model.SearchResult.PageCount

    @Html.PagedListPager(Model.SearchResult, page => Url.Action("DisplayResults", new { page, Model.EmailAddress, Model.UserName }))
</div>*@
